[project]
name = "odmantic"
version = "1.0.0"
description = "ODMantic, an AsyncIO MongoDB Object Document Mapper for Python using type hints "
authors = [{ name = "Arthur Pastel", email = "arthur.pastel@gmail.com" }]
license = { file = "LICENSE" }
readme = "README.md"
keywords = ["mongodb", "asyncio", "types", "pydantic", "motor"]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Internet",
    "Topic :: Database",
    "Topic :: Database :: Front-Ends",
    "Topic :: Software Development :: Object Brokering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Framework :: AsyncIO",
    "Environment :: Web Environment",
    "License :: OSI Approved :: ISC License (ISCL)",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Framework :: Pydantic :: 2",
    "Framework :: Pydantic",
]

requires-python = ">=3.8"
dependencies = [
    "pydantic >=2.5.2",
    "typing-extensions >= 4.2.0; python_version<'3.11'",
    "motor >=3.1.1",
    "pymongo >=4.1.0",
]
[project.optional-dependencies]
test = [
    "ruff ~= 0.0.277",
    "mypy ~= 1.4.1",
    "pytest ~= 7.0",
    "pytest-xdist ~= 2.1.0",
    "pytest-asyncio ~= 0.16.0",
    # "pytest-testmon ~= 1.3.1",
    "pytest-sugar ~= 0.9.5",
    "inline-snapshot ~= 0.6.0",
    "async-asgi-testclient ~= 1.4.11",
    "asyncmock ~= 0.4.2",
    "coverage[toml] ~= 6.2",
    "pytz ~= 2023.3",
    "types-pytz ~= 2023.3.0.0",
    "darglint ~= 1.8.1",
    "uvicorn ~= 0.17.0",
    "fastapi >=0.104.0",
    "requests ~= 2.24",
    "typer ~= 0.4.1",
    "semver ~= 2.13.0",
    "pytest-benchmark ~= 4.0.0",
    "pytest-codspeed ~= 2.1.0",
    "httpx ~= 0.24.1",
]
fastapi = ["fastapi >=0.100.0"]
doc = [
    "pydocstyle[toml] ~= 6.3.0",
    "mkdocs-material ~= 9.5.2",
    "mkdocstrings[python] ~= 0.24.0",
    "mkdocs-macros-plugin ~= 1.0.4",
]
dev = ["ipython ~= 7.16.1"]

[project.urls]
Documentation = "https://art049.github.io/odmantic"
Source = "https://github.com/art049/odmantic"

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.ruff]
per-file-ignores = { "tests/*" = ["C", "I"], "odmantic/typing.py" = ["I001"] }
line-length = 88
select = ["E", "F", "I", "C"]
ignore = ["C405"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.pydocstyle]
convention = "google"
match_dir = "odmantic"
add_ignore = ["D1", "D205", "D415"]

[tool.isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
force_grid_wrap = 0
float_to_top = true
known_first_party = ["odmantic", "tests"]
skip = ["docs"]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:\"@coroutine\" decorator is deprecated.*:DeprecationWarning:motor.*",
    "ignore:the AIOEngineDependency object is deprecated.*:DeprecationWarning:odmantic.*",
]
pythonpath = "src tests"
addopts = "--benchmark-disable -W error::DeprecationWarning"
[tool.coverage.run]
branch = true
[tool.coverage.report]
include = ["odmantic/*", "tests/*"]
omit = ["**/conftest.py"]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@pytest.mark.skip",
    "@abstractmethod",
]
