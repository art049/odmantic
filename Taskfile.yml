# https://taskfile.dev

version: "3"

silent: true

includes:
  release: ./.github

tasks:
  mongodb:
    desc: Start the local MongoDB server.
    cmds:
      - task: mongodb:docker
    status:
      - nc -vz 127.0.0.1 27017

  mongodb:docker:
    cmds:
      - echo "Starting odmantic-mongo-test mongo container"
      - docker run --rm -p 27017:27017 --name odmantic-mongo-test -d mongo:4
    status:
      - docker container inspect odmantic-mongo-test
  mongodb:replica-compose:
    cmds:
      - echo "Starting replica mongo cluster"
      - docker-compose up -d
      - ./.github/actions/mongo-service/replica/start.sh
    status:
      - test -n "$(docker-compose ps -q)"
    env:
      VERSION: 4.0
      COMPOSE_FILE: .github/actions/mongo-service/replica/docker-compose.yml
  mongodb:replica-compose:down:
    cmds:
      - docker-compose down
    env:
      VERSION: 4.0
      COMPOSE_FILE: .github/actions/mongo-service/replica/docker-compose.yml
  mongodb:sharded-compose:
    cmds:
      - echo "Starting sharded mongo cluster"
      - docker-compose up -d
      - ./.github/actions/mongo-service/sharded/start.sh
    status:
      - test -n "$(docker-compose ps -q)"
    env:
      VERSION: 4.0
      COMPOSE_FILE: .github/actions/mongo-service/sharded/docker-compose.yml
  mongodb:sharded-compose:down:
    cmds:
      - docker-compose down
    env:
      VERSION: 4.0
      COMPOSE_FILE: .github/actions/mongo-service/sharded/docker-compose.yml

  full-test:
    desc: Run the tests against all supported versions.
    deps:
      - task: mongodb
    cmds:
      - tox --parallel auto

  test:
    desc: |
      Run the tests with the current version.
    deps:
      - task: mongodb
    cmds:
      - poetry run pytest -rs

  coverage:
    desc: Get the test coverage (xml and html) with the current version.
    deps:
      - task: mongodb
    cmds:
      - poetry run coverage run -m pytest -rs
      - poetry run coverage report -m
      - poetry run coverage xml
      - 'echo "Generated XML report: ./coverage.xml"'
      - poetry run coverage html
      - 'echo "Generated HTML report: ./htmlcov/index.html"'

  docs:
    desc: Start the local documentation server.
    cmds:
      - poetry run mkdocs serve -f ./docs/mkdocs.yml

  lint:
    desc: Run the linting checks.
    cmds:
      - pre-commit run --all-files

  format:
    desc: Format the code (and imports).
    cmds:
      - poetry run isort -y
      - poetry run black ./

  setup:
    desc: Configure the development environment.
    cmds:
      - task: setup:git-lfs
      - task: setup:pre-commit-hook
      - task: setup:poetry-setup

  setup:git-lfs:
    cmds:
      - git lfs install
      - git lfs pull
    status:
      - test -d .git/lfs/

  setup:pre-commit-hook:
    cmds:
      - pre-commit install
    status:
      - test -f .git/hooks/pre-commit

  setup:poetry-setup:
    cmds:
      - poetry install
    sources:
      - pyproject.toml
    generates:
      - poetry.lock
